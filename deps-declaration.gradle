ext.deps = [:]

ext.versions = [:]
def versions = [:]
//sdk versions
versions.compile_sdk = 28
versions.min_sdk = 21
versions.target_sdk = 26
versions.app_version_code = 1
versions.app_version_name = '1.0.0'

// android and google essentials
versions.android_plugin = '3.5.0'
versions.constraint_layout = '1.1.3'
versions.google_services = '3.0.0'
versions.lifecycle = '2.1.0-rc01'
versions.support_lib = '27.1.0'
versions.support_x = '1.0.0'
versions.android_test = '1.1.0'
versions.android_test_junit = '1.1.1'
versions.multidex = '2.0.0'
versions.espresso = '3.1.0'
versions.dagger = '2.24'
versions.glide = '4.9.0'
versions.junit = '4.12'
versions.mockito = '2.12.0'
versions.okhttp = '4.0.0'
versions.retrofit = '2.6.0'
versions.rxjava = '2.2.10'
versions.rxandroid = '2.1.1'
versions.rxbinding = '2.0.0'
versions.rx_idler = '0.9.1'
versions.findbugs = '3.0.1'
versions.kotlin = '1.3.41'
versions.timber = '4.7.1'
versions.mockito_kotlin = '2.1.0'
versions.arch_core_testing = '2.0.0'
versions.robolectric = '4.3'
versions.moshi = '1.8.0'
versions.coroutines = '1.2.1'
versions.coroutines_test = '1.3.0-M2'
versions.truth = '1.0'
ext.versions = versions

def deps = [:]

def internal = [:]
internal.networkmodule = project(':networkmodule')
deps.internal = internal

// ----- START OF GOOGLE AND ANDROID ESSENTIALS
deps.android_plugin = "com.android.tools.build:gradle:$versions.android_plugin"
deps.databinding = "com.android.databinding:compiler:$versions.android_plugin"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.multidex = "androidx.multidex:multidex:$versions.multidex"
deps.google_services = "com.google.gms:google-services:$versions.google_services"

def support_lib = [:]
support_lib.design = "com.google.android.material:material:$versions.support_x"
support_lib.appcompat = "androidx.appcompat:appcompat:$versions.support_x"
support_lib.recyclerview = "androidx.recyclerview:recyclerview:$versions.support_x"
support_lib.cardview = "androidx.cardview:cardview:$versions.support_x"
support_lib.support_annotations = "androidx.annotation:annotation:$versions.support_x"
deps.support_lib = support_lib


def lifecycle = [:]
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.idling_resource = "androidx.test.espresso:espresso-idling-resource:$versions.espresso"
deps.espresso = espresso

// ----- END OF ANDROID AND GOOGLE ESSENTIALS

def dagger = [:]
dagger.main = "com.google.dagger:dagger:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
deps.dagger = dagger

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
glide.okhttp_integration = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
deps.glide = glide

deps.junit = "junit:junit:$versions.junit"

def okhttp = [:]
okhttp.main = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
okhttp.urlconnection = "com.squareup.okhttp3:okhttp-urlconnection:$versions.okhttp"
deps.okhttp = okhttp

def retrofit = [:]
retrofit.main = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.moshi = "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"

deps.retrofit = retrofit

def rxjava = [:]
rxjava.main = "io.reactivex.rxjava2:rxjava:$versions.rxjava"
rxjava.android = "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
deps.rxjava = rxjava

def rxbinding = [:]
rxbinding.platform = "com.jakewharton.rxbinding2:rxbinding:$versions.rxbinding"
deps.rxbinding = rxbinding

def android_test = [:]
android_test.rules = "androidx.test:rules:$versions.android_test"
android_test.runner = "androidx.test:runner:$versions.android_test"
android_test.junit = "androidx.test.ext:junit:$versions.android_test_junit"
deps.android_test = android_test

deps.findbugs_jsr = "com.google.code.findbugs:jsr305:$versions.findbugs"

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
kotlin.gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin


// Json library with built in type adapters
def moshi = [:]
moshi.kotlin = "com.squareup.moshi:moshi-kotlin:$versions.moshi"
moshi.codegen = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"
deps.moshi = moshi

deps.timber = "com.jakewharton.timber:timber:$versions.timber"

deps.arch_core_testing = "androidx.arch.core:core-testing:$versions.arch_core_testing"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.rx_idler = "com.squareup.rx.idler:rx2-idler:$versions.rx_idler"

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.android = "org.mockito:mockito-android:$versions.mockito"
mockito.inline = "org.mockito:mockito-inline:$versions.mockito"
mockito.kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"
deps.mockito = mockito

def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.rx2 = "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$versions.coroutines"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines_test"
deps.coroutines = coroutines

deps.truth = "com.google.truth:truth:$versions.truth"

ext.deps = deps